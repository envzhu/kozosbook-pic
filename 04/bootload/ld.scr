OUTPUT_FORMAT("elf32-littlemips")
OUTPUT_ARCH(mips)
ENTRY("_start")


MEMORY
{
  boot_mem(rx)      : o = 0x9FC00000, l = 0xBF0     /* special flash boot memory */
  config_mem(rx)    : o = 0x9FC00BF0, l = 0x10      /* configuration bits */

  romall(rx)        : o = 0x9D000000, l = 0x40000   /* 256KB */
  program_mem (rx)  : o = 0x9D001000, l = 0x3F000   /* flash program memory 256KB*/
  
  ramall(rx)        : o = 0xA0000000, l = 0x10000 /* 64KB */
  buffer(rwx)	      : o = 0xA0000000, l = 0x7000  /* 28KB */
  data_mem (wx)     : o = 0xA0007000, l = 0xC00   /* ram memory 32KB */
  stack(rw)	        : o = 0xA0007FFC, l = 0x0     /* end of RAM */
}


SECTIONS
{
  /*
   * PIC32 configuration bits.
   */
  .devcfg : 
  { KEEP(*(.devcfg3))
    KEEP(*(.devcfg2))
    KEEP(*(.devcfg1))
    KEEP(*(.devcfg0))
  } > config_mem

  .startup :
  {
    KEEP(*(.start))
  } > boot_mem

  
  .text : {
    _text_start = . ;
    *(.text)
    _etext = . ;
  } > program_mem


  .rodata : {
    _rodata_start = . ;
    *(.strings)
    *(.rodata)
    *(.rodata.*)
    _erodata = . ;
  } > program_mem


  .buffer : {
    buffer_start = . ;
  } > buffer

	.data : {
		_data_start = . ;
		*(.data)
    *(.sdata)
		_edata = . ;
	} > data_mem AT> program_mem

	.bss : {
		_bss_start = . ;
		*(.bss)
    *(.sbss)
		*(COMMON)
		_ebss = . ;
	} > data_mem AT> program_mem

  .stack  : {
    _stack = . ;
  } > stack
}
