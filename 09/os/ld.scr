OUTPUT_FORMAT("elf32-littlemips")
OUTPUT_ARCH("mips")
ENTRY(_startup)

/*BMXDKPBA=0xC000 BMXDUDBA=0x10000 BMXDUPBA=0x10000*/
MEMORY
{
	ramall(rwx)		: o = 0xA0000000, l = 0x010000 /* 64KB */
	softvec(rw)	    : o = 0xA0000000, l = 0x000100 /* top of RAM */

	/* Data region : 16KB 0xA0008000 ~ 0xA000BFFF(=0xA0000000+BMXDKPBA-1) */
 	data_ram(rwx)	: o = 0xA0008000, l = 0x004000
	userstack(rw)	: o = 0xA0007000, l = 0x000000 /* end of data_ram */
	bootstack(rw)	: o = 0xA0007C00, l = 0x000000
	intrstack(rw)	: o = 0xA0007C00, l = 0x000000 /* end of RAM */

	 /* Text region :16KB (0xA0000000+BMXDKPBA) ~ 0xA000FFFF(0xA0000000+BMXDUDBA-1)*/
  	program_ram(rwx)	: o = 0xA000C000, l = 0x04000
}

SECTIONS
{
	.softvec : {
	softvec = .;
	} > softvec

	.rodata : {
		_rodata_start = . ;
		*(.strings)
		*(.rodata)
		*(.rodata.*)
		_erodata = . ;
	} > data_ram

	.data : {
		_data_start = . ;
		*(.data)
		_edata = . ;
	} > data_ram

	.bss : {
		_bss_start = . ;
		*(.bss)
		*(COMMON)
		_ebss = . ;
	} > data_ram

	.userstack : {
		_userstack = .;
	} > userstack

	.bootstack  : {
		_bootstack = . ;
	} > bootstack

	.intrstack  : {
		_intrstack = . ;
	} > intrstack

	.text : {
		_text_start = . ;
		*(.text)
		_etext = . ;
	} > program_ram
}
